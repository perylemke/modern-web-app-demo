version: '3'
services:
  postgres:
    container_name: postgres
    image: postgres:15.3
    restart: always
    environment:
      - POSTGRES_DB=appdb
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - backend
    ports:
     - "5432:5432"

  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6379:6379

  django:
    container_name: django_api
    build:
      context: .
      dockerfile: ./api_server/Dockerfile
    image: perylemke/django_api:latest
    depends_on:
      - postgres
      - redis
    environment:
      - DB_ENGINE=django.db.backends.postgresql
      - DB_NAME=appdb
      - DB_USER=user
      - DB_PASSWORD=password
      - DB_HOST=postgres
      - DB_PORT=5432
      - CACHE_MIDDLEWARE_ALIAS=redis
      - CACHE_LOCATION=redis://redis:6379/0 
    entrypoint: /backend_app/docker-entrypoint.sh 
    volumes:
      - api-volume:/backend_app
    networks:
      - backend
      - frontend
    ports:
      - "8000:8000"

  react:
    container_name: react_ui
    build:
      context: .
      dockerfile: ./web_client/Dockerfile
    image: perylemke/react_ui:latest
    depends_on:
      - django
    environment:
      - BACKEND_APP_PROXY_HOST=django
    volumes:
      - frontend-volume:/frontend_app
    networks:
      - frontend
    ports:
      - "3000:3000"


networks:
  backend:
  frontend:

volumes:
  api-volume:
  frontend-volume:
  db:
    driver: local